version: "3.4"
x-logging: &logging
  logging:
    driver: json-file
    options:
      max-size: 10m
      max-file: "3"

services:
  consensus:
    restart: "${RESTART}"
    build:
      context: ./teku
      args:
        - BUILD_TARGET=${TEKU_SRC_BUILD_TARGET}
        - DOCKER_TAG=${TEKU_DOCKER_TAG}
      dockerfile: ${TEKU_DOCKERFILE}
    image: teku:local
    user: teku
    stop_grace_period: 1m
    volumes:
      - tekuconsensus-data:/var/lib/teku
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      - JAVA_OPTS=-XX:SoftMaxHeapSize=2g -Xmx4g
    ports:
      - ${TEKU_PORT}:${TEKU_PORT}/tcp
      - ${TEKU_PORT}:${TEKU_PORT}/udp
    networks:
      default:
        aliases:
          - eth2
    <<: *logging
    entrypoint:
      - /opt/teku/bin/teku
      - --data-path=/var/lib/teku
      - --log-destination=CONSOLE
      - --network=${NETWORK}
      - --eth1-endpoints=${EC_NODE}
      - --eth1-deposit-contract-max-request-size=150
      - --p2p-port=${TEKU_PORT}
      - --p2p-peer-upper-bound=${TEKU_PEER_COUNT}
      - --logging=${LOG_LEVEL}
      - --rest-api-host-allowlist=*
      - --rest-api-enabled=true
    command: ${TEKU_RAPID_SYNC}
    labels:
      - traefik.enable=true
      - traefik.http.routers.cc.entrypoints=websecure
      - traefik.http.routers.cc.rule=Host(`${CC_HOST}.${DOMAIN}`)
      - traefik.http.services.cc.loadbalancer.server.port=5051
  eth:
    image: tianon/true
    restart: "no"
    depends_on:
      - consensus
volumes:
  tekuconsensus-data:
