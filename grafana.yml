version: "3.4"
x-logging: &logging
  logging:
    driver: json-file
    options:
      max-size: 10m
      max-file: "3"
      tag: '{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}'

services:
  prometheus:
    restart: "${RESTART}"
    build:
      context: ./prometheus
    image: prometheus:local
    volumes:
      - prom-data:/prometheus
      - ./prometheus/alert_rules.yml:/etc/prometheus/alert_rules.yml
      - /etc/localtime:/etc/localtime:ro
    environment:
      - CLIENT=${COMPOSE_FILE}
    entrypoint: choose-config.sh
    command: ["/bin/prometheus", "--storage.tsdb.path=/prometheus", "--web.console.libraries=/usr/share/prometheus/console_libraries", "--web.console.templates=/usr/share/prometheus/consoles"]
    <<: *logging
    depends_on:
      - node-exporter
      - blackbox-exporter
      - json-exporter
      - cryptowat-exporter
  node-exporter:
    image: quay.io/prometheus/node-exporter:latest
    command:
      - '--path.rootfs=/host'
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
#      - '--collector.textfile.directory=/etc/node-exporter/'
      - '--collector.filesystem.ignored-mount-points=${NODE_EXPORTER_IGNORE_MOUNT_REGEX}'
      - '--no-collector.ipvs'
    pid: host
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'
      - /etc/hostname:/etc/nodename:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /etc/localtime:/etc/localtime:ro
    <<: *logging
  blackbox-exporter:
    restart: "${RESTART}"
    image: prom/blackbox-exporter:master
    volumes:
      - ./prometheus/blackbox.yml:/config/blackbox.yml
      - /etc/localtime:/etc/localtime:ro
    <<: *logging
    command:
      - --config.file=/config/blackbox.yml
  json-exporter:
    restart: "${RESTART}"
    image: quay.io/prometheuscommunity/json-exporter
    volumes:
      - ./prometheus/json.yml:/config/json.yml
      - /etc/localtime:/etc/localtime:ro
    <<: *logging
    command:
      - --config.file
      - /config/json.yml
  cryptowat-exporter:
    restart: "${RESTART}"
    image: nbarrientos/cryptowat_exporter
    volumes:
      - /etc/localtime:/etc/localtime:ro
    environment:
      - CRYPTOWAT_EXCHANGES=kraken
      - CRYPTOWAT_PAIRS=ethusd,ethchf
      - CRYPTOWAT_CACHESECONDS=300
      - TZ=Europe/Zurich
    <<: *logging
  promtail:
    image: grafana/promtail:latest
    user: root
    volumes:
      - /etc/machine-id:/etc/machine-id:ro
      - ./promtail:/etc/promtail
      - promtail-data:/tmp
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    command:
      - '--config.file=/etc/promtail/promtail.yml'
    restart: "${RESTART}"
    depends_on:
      - loki
    <<: *logging
  loki:
    image: grafana/loki:latest
    volumes:
      - loki-data:/tmp
      - ./loki:/etc/loki
    command:
      - '--config.file=/etc/loki/loki.yml'
    restart: "${RESTART}"
    <<: *logging
  grafana:
    restart: "${RESTART}"
    build:
      context: ./grafana
    image: grafana:local
    environment:
      - GF_SERVER_HTTP_PORT=${GRAFANA_PORT}
      - CLIENT=${COMPOSE_FILE}
    volumes:
      - grafana-data:/var/lib/grafana
      - grafana-config:/etc/grafana
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - prometheus
      - loki
      - promtail
    entrypoint: ["provision-dashboards.sh"]
    command: /run.sh
    <<: *logging
    labels:
      - traefik.enable=true
      - traefik.http.routers.grafana.entrypoints=web,websecure
      - traefik.http.routers.grafana.rule=Host(`${GRAFANA_HOST}.${DOMAIN}`)
      - traefik.http.routers.grafana.tls.certresolver=letsencrypt
      - traefik.http.services.grafana.loadbalancer.server.port=${GRAFANA_PORT}
  eth:
    depends_on:
      - grafana
volumes:
  grafana-data:
  grafana-config:
  prom-data:
  loki-data:
  promtail-data:
